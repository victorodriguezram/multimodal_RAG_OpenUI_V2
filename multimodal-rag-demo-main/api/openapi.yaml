openapi: 3.0.3
info:
  title: Multimodal RAG API
  description: |
    Production-ready Multimodal Retrieval-Augmented Generation (RAG) API
    
    This API provides document processing, embedding generation, and intelligent search capabilities
    with full N8N integration support for workflow automation.
    
    ## Features
    - Document upload and processing (PDF, images, text)
    - Multimodal embeddings (text + visual)
    - Vector similarity search
    - Async task processing
    - N8N webhook integration
    - Rate limiting and authentication
    
    ## Authentication
    All endpoints require API key authentication via the `X-API-Key` header.
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8000
    description: Local development server
  - url: https://api.yourdomain.com
    description: Production server

security:
  - ApiKeyAuth: []

paths:
  /health:
    get:
      summary: Health check
      description: Check API health status
      tags:
        - Health
      security: []
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                    example: "1.0.0"

  /documents/upload:
    post:
      summary: Upload document
      description: Upload and process a document for RAG system
      tags:
        - Documents
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Document file (PDF, image, or text)
                metadata:
                  type: object
                  description: Additional document metadata
                  additionalProperties: true
              required:
                - file
      responses:
        '202':
          description: Document upload accepted for processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '400':
          description: Invalid file or request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /search:
    post:
      summary: Search documents
      description: Perform semantic search across uploaded documents
      tags:
        - Search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          description: Invalid search request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /search/multimodal:
    post:
      summary: Multimodal search
      description: Search using both text and image queries
      tags:
        - Search
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                text_query:
                  type: string
                  description: Text query
                image:
                  type: string
                  format: binary
                  description: Image query
                top_k:
                  type: integer
                  default: 5
                  minimum: 1
                  maximum: 50
      responses:
        '200':
          description: Multimodal search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'

  /tasks/{task_id}:
    get:
      summary: Get task status
      description: Check the status of an async task
      tags:
        - Tasks
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: string
          description: Task ID
      responses:
        '200':
          description: Task status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskStatus'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /webhooks/n8n:
    post:
      summary: N8N webhook endpoint
      description: Receive notifications from N8N workflows
      tags:
        - Webhooks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                workflow_id:
                  type: string
                execution_id:
                  type: string
                action:
                  type: string
                  enum: [document_processed, search_requested, task_completed]
                data:
                  type: object
                  additionalProperties: true
      responses:
        '200':
          description: Webhook processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "received"
                  processed_at:
                    type: string
                    format: date-time

  /admin/stats:
    get:
      summary: Get system statistics
      description: Retrieve system usage statistics (admin only)
      tags:
        - Admin
      security:
        - AdminAuth: []
      responses:
        '200':
          description: System statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStats'
        '403':
          description: Admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    AdminAuth:
      type: apiKey
      in: header
      name: X-Admin-Key

  schemas:
    SearchRequest:
      type: object
      properties:
        query:
          type: string
          description: Search query text
          example: "What are the benefits of ETFs?"
        top_k:
          type: integer
          description: Number of results to return
          default: 5
          minimum: 1
          maximum: 50
        filters:
          type: object
          description: Search filters
          additionalProperties: true
      required:
        - query

    SearchResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        total_results:
          type: integer
        query_time_ms:
          type: number
        metadata:
          type: object
          additionalProperties: true

    SearchResult:
      type: object
      properties:
        document_id:
          type: string
        chunk_id:
          type: string
        content:
          type: string
        score:
          type: number
          description: Similarity score (0-1)
        metadata:
          type: object
          additionalProperties: true
        page_number:
          type: integer
          nullable: true

    TaskResponse:
      type: object
      properties:
        task_id:
          type: string
          description: Unique task identifier
        status:
          type: string
          enum: [pending, processing, completed, failed]
        message:
          type: string
        created_at:
          type: string
          format: date-time

    TaskStatus:
      type: object
      properties:
        task_id:
          type: string
        status:
          type: string
          enum: [pending, processing, completed, failed]
        progress:
          type: number
          description: Completion percentage (0-100)
        result:
          type: object
          nullable: true
          additionalProperties: true
        error:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    SystemStats:
      type: object
      properties:
        total_documents:
          type: integer
        total_chunks:
          type: integer
        index_size_mb:
          type: number
        active_tasks:
          type: integer
        api_calls_today:
          type: integer
        uptime_seconds:
          type: number
        memory_usage:
          type: object
          properties:
            used_mb:
              type: number
            available_mb:
              type: number

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        details:
          type: object
          nullable: true
          additionalProperties: true
        timestamp:
          type: string
          format: date-time

tags:
  - name: Health
    description: API health and status endpoints
  - name: Documents
    description: Document upload and management
  - name: Search
    description: Search and retrieval operations
  - name: Tasks
    description: Async task management
  - name: Webhooks
    description: External webhook integrations
  - name: Admin
    description: Administrative endpoints
